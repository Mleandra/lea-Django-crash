# Generated by Django 3.0 on 2020-03-05 18:02

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Client',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=100)),
                ('email', models.EmailField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Manga',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=100)),
                ('reference', models.IntegerField(null=True)),
                ('creation', models.DateField(auto_now_add=True)),
                ('disponible', models.BooleanField(default=True)),
                ('mignature', models.URLField()),
            ],
        ),
        migrations.CreateModel(
            name='Mangaka',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Reservation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creation', models.DateField(auto_now_add=True)),
                ('livre', models.BooleanField(default=False)),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='store.Client')),
                ('manga', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='store.Manga')),
            ],
        ),
        migrations.AddField(
            model_name='manga',
            name='mangaka',
            field=models.ManyToManyField(blank=True, related_name='mangas', to='store.Mangaka'),
        ),
    ]
